export declare function environment(): "chrome" | "firefox" | "safari" | "edge" | "opera" | "browser" | "node" | "unknown";
export declare function logAndThrow(message: string): never;
export declare function parseJSON(json: string): any;
export declare function get(url: URL | string, options?: RequestInit): Promise<Response>;
export declare function post(url: URL | string, options: RequestInit): Promise<Response>;
type RetryOptions = {
    maxAttempts?: number;
    baseDelay?: number;
    jitter?: number;
    retryOnStatus?: number[];
    shouldRetry?: (err: any) => boolean;
};
export declare function retryWithBackoff<T>(fn: () => Promise<T>, { maxAttempts, baseDelay, jitter, retryOnStatus, shouldRetry, }?: RetryOptions): Promise<T>;
export {};
